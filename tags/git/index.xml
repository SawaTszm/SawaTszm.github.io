<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Git on sawa.md</title>
    <link>https://SawaTszm.github.io/tags/git/</link>
    <description>Recent content in Git on sawa.md</description>
    <image>
      <title>sawa.md</title>
      <url>https://SawaTszm.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://SawaTszm.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 06 May 2024 14:51:45 +0900</lastBuildDate><atom:link href="https://SawaTszm.github.io/tags/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>【git】カウントしたコミットファイルの総文字数を自動でコミットメッセージに追加する</title>
      <link>https://SawaTszm.github.io/post/auto-counting-word/</link>
      <pubDate>Mon, 06 May 2024 14:51:45 +0900</pubDate>
      
      <guid>https://SawaTszm.github.io/post/auto-counting-word/</guid>
      <description>趣味で書いている小説をgitで管理していて、進捗把握のためにコミットメッセージにその日1日書いた総文字数を入れ込んでいます。
こんな感じで。
以前までは、SF作家である藤井太洋先生自身が公開してくださっている拡張機能: novel-writerのステータスバー表示で文字数を把握し、手動でコミットメッセージを書いていました。
ただ、この方法にはいくつかの（個人的には解決したい）問題があり、
日付が回ると文字数がリセットされるので、うっかりしてると差分の文字数がわからなくなる 特定のファイルや変更は含みたくない場合がある（翌日への自分のメモなど） コミットメッセージへの手打ちを辞めたい 上記二つに関しては、私が拡張機能で出来ることを把握しきれていないだけ or 今後改善される可能性はありますが、どうせならコミット時に自動でコミットメッセージ入力できたら楽だよなぁという動機があったので、ちょっと調べてスクリプトを組んでみました。
やったこと 下記のスクリプトを.git/hooks/commit-msgとして設定します。
#!/bin/bash # ステージングエリアに追加されたファイルの差分を取得し、文字数をカウントする関数 # .git/hooksに移動させて、`chmod +x .git/hooks/commit-msg`を実行することでコミット時にhookされる get_character_count() { # ステージングエリアに追加されたファイルの差分を取得 diff_output=$(git diff --cached) # 追加された行の文字数を合計する added_characters=$(echo &amp;#34;$diff_output&amp;#34; | grep &amp;#39;^+&amp;#39; | sed &amp;#39;s/^+//g&amp;#39; | wc -m) # 削除された行の文字数を合計する deleted_characters=$(echo &amp;#34;$diff_output&amp;#34; | grep &amp;#39;^-&amp;#39; | sed &amp;#39;s/^-//g&amp;#39; | wc -m) # 追加された文字数と削除された文字数の合計を計算する total_characters=$((added_characters - deleted_characters)) # 結果を出力 echo &amp;#34;$total_characters&amp;#34; } # コミットメッセージに追加 character_count=$(get_character_count) echo &amp;#34;📝 $character_count 文字&amp;#34; &amp;gt;&amp;gt; &amp;#34;$1&amp;#34; スクリプト内でやっている事はかなりシンプルで、git diffの結果である追加行(+で始まるもの)と削除行(-で始まるもの)の文字数をそれぞれカウントして差し引いて、総文字数を計算しているだけです。</description>
    </item>
    
  </channel>
</rss>
